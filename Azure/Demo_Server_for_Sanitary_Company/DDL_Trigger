--- update status of a specific emp_id on employee will trigger resigned_employee to update
CREATE TRIGGER update_emp_status 
ON emp FOR UPDATE
AS
BEGIN 
	INSERT INTO resigned_emp(emp_id, date_of_resignation)
	SELECT DISTINCT emp.emp_id, getdate() FROM INSERTED emp
	LEFT JOIN resigned_emp
	ON resigned_emp.emp_id = emp.emp_id
	WHERE emp.status = 'Resigned'
END
GO


--- insert on new employee update the salary_change table
CREATE TRIGGER insert_salary_change
ON emp FOR INSERT
AS
BEGIN 
	INSERT INTO salary_change(emp_id, increment_date)
	SELECT DISTINCT emp.emp_id, getdate() FROM INSERTED emp
	LEFT JOIN salary_change
	ON salary_change.emp_id = emp.emp_id
END
GO

--- update the ordered_item when new order comes in
CREATE TRIGGER insert_ordered_items
ON confirmed_order FOR INSERT
AS
BEGIN 
	INSERT INTO ordered_items(order_id)
	SELECT DISTINCT confirmed_order.order_id FROM INSERTED confirmed_order
	LEFT JOIN ordered_items
	ON ordered_items.order_id = confirmed_order.order_id
END
GO

--- delete a specific order on confirmed order will trigger cancelled_order to update
CREATE TRIGGER delete_confirmed_order 
ON confirmed_order FOR DELETE
AS
BEGIN 
	DECLARE @order_id INT, @amount_purchase INT, @date_of_cancellation DATE
	SELECT @order_id = DELETED.order_id FROM DELETED
	INSERT INTO cancelled_order(order_id, amount_purchase, date_of_cancellation)
	VALUES (@order_id, @amount_purchase, getdate())
END
GO
